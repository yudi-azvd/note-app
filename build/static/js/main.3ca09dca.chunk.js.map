{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","components/Footer.js","App.js","index.js"],"names":["buttonStyle","backgroundColor","border","color","paddingTop","marginRight","outline","liStyle","Note","note","toggleImportance","label","important","style","className","onClick","content","Notification","message","axios","get","then","response","data","newObject","post","id","put","Footer","fontStyle","fontSize","flexShrink","marginTop","marginBottom","padding","background","paddingRight","paddingLeft","cursor","inputStyle","borderBottom","marginLeft","ulStyle","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","concat","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ca09dca.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance}) => {\n  const label = note.important ? '!' : '>'\n\n  return (\n    <li style={liStyle} className='note'>\n      <button \n        style={buttonStyle} \n        onClick={toggleImportance}\n      >\n        {label}\n      </button> {note.content}\n    </li>\n  )\n}\n\nconst buttonStyle = {\n  backgroundColor: '#191d2b',\n  border: '1px solid #7ECC29',\n  color: '#7ECC29',\n  paddingTop: 2,\n  marginRight: 8,\n  outline: 'none',\n\n}\n\nconst liStyle = {\n  // marginLeft: -20,\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if(message === null)\n    return null\n  \n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n}\n\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n/**\n * frontend: localhost:3000\n * backend : localhost:3001/api/notes\n * \n * But only using this baseUrl, the frontend will try\n * to fetch resources from localhost:3000/api/notes\n * although the real place to fetch from is \n * localhost:3000/api/notes\n * \n * Solution: use a proxy:\n */\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  // const nonExisting = {\n  //   id: 1000,\n  //   content: 'this note is not saved to server',\n  //   date: Date.now(),\n  //   important: true\n  // }\n  // return request.then(response => response.data.concat(nonExisting))\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  // console.log(`${baseUrl}/${id}`);\n  // console.log(request.then(response => console.log(response.data)));\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n\n","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: '#191d2b',\n    fontStyle: 'italic',\n    fontSize: 16,\n    flexShrink: 0,\n    marginTop: 20,\n    marginBottom: 10,\n    padding: '5px',\n    background: '#7ECC29'\n  }\n\n  /**\n   * sticky footer\n   * https://stackoverflow.com/questions/3443606/make-footer-stick-to-bottom-of-page-correctly\n   */\n\n  return (\n    <footer style={footerStyle}>\n      <em>\n        Note app, Department of Computer \n        Science, University of Helsinki \n        2019\n      </em>\n    </footer>\n  )\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\n\nimport Note from './components/Note'\nimport Notification from './components/Notification'\n\nimport noteService from './services/notes'\nimport Footer from './components/Footer';\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('new note')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage,  setErrorMessage] = useState(null)\n\n  const toggleImportance = id => {\n    const note = notes.find(n => n.id === id)\n    // It is not recommended to modify note cause it is part of notes, \n    // which is part of the component's state. Changed not is a shallow\n    // copy of note.\n    const changedNote = { ...note, important: !note.important }\n    // console.log('updating note with id', id);\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note:returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`Note ${note.content} was already removed from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll ?\n    notes : notes.filter(note => note.important)\n\n  const rows = () => notesToShow.map(note => \n    <Note \n      key={note.id} \n      note={note} \n      toggleImportance={() => toggleImportance(note.id)}\n    />\n  )\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: false,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    // syncs changes made to input with the component's state\n    setNewNote(event.target.value)    \n  }\n  return (\n    <div className='main'>\n      <div className='content'>\n      <h1>N o t e s</h1>\n        <Notification message={errorMessage} />\n\n        <div>\n          <button style={buttonStyle} onClick={() => setShowAll(!showAll)}>\n            show {showAll ? 'important' : 'all'}\n          </button>\n        </div>\n\n        <ul style={ulStyle}>\n          {rows()}\n        </ul>\n\n        <form onSubmit={addNote}>\n          <button style={{...buttonStyle, backgroundColor: 'white'}} type='submit'>save ></button>\n          <input \n            style={inputStyle}\n            value={newNote} \n            onChange={handleNoteChange}\n          />\n        </form>\n      </div>\n      <Footer />      \n    </div>\n  )\n}\n\nconst buttonStyle = {\n  background: '#FFF133',\n  color: '#191d2b',\n  border: 'none',\n  paddingRight: 10,\n  paddingLeft: 10,\n  outline: 'none',\n  cursor: 'pointer',\n  // fontSize: 20,\n  // D6C911\n}\n\nconst inputStyle = {\n  backgroundColor: 'transparent',\n  color: '#7ECC29',\n  border: 'none',\n  borderBottom: '1px dashed #7ECC29',\n  marginLeft: 10,\n  paddingLeft: 10,\n  outline: 'none',\n  fontSize: 20,\n}\n\nconst ulStyle = {\n  paddingLeft: 0,\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}